{"version":3,"sources":["components/Search/Search.style.tsx","components/ResultList/ResultList.style.tsx","components/ResultList/ResultList.tsx","components/ui/InlineList/InlineList.style.tsx","components/ui/InlineList/InlineList.tsx","components/Definition/Definition.style.tsx","components/Definition/Definition.tsx","components/Message/Message.style.tsx","components/Message/Message.tsx","components/Search/Search.tsx","App.js","reportWebVitals.js","index.js"],"names":["theme","getGlobalStyles","SearchForm","styled","Form","Progress","Button","colors","brandPrimary","base","ResultListContainer","section","brandDark","light","ResultList","children","naturalSlideWidth","naturalSlideHeight","totalSlides","React","Children","count","map","child","index","cloneElement","showAsSelectedForCurrentSlideOnly","InlineListContainer","ul","ListItem","InlineList","DefinitionCard","article","DefinitionCardContent","Card","Header","fontSize","h4","List","ol","Definition","props","DateOutput","Fragment","date","sm","word","type","definitions","definition","MessageCard","color","Paragraph","Message","text","buttons","styledHelpers","buttonThemes","Search","useState","liveSearchTerm","setLiveSearchTerm","submittedSearchTerm","setSubmittedSearchTerm","apiKeyDict","setDefinitions","queryRunning","setQueryRunning","handleSearchSubmit","event","preventDefault","term","a","query","axios","get","then","response","data","catch","error","console","log","milliseconds","Promise","setTimeout","useEffect","getDefinitions","delay","slice","onSubmit","labelText","placeholder","autoFocus","onChange","target","value","variant","onClick","indicatorColor","trackColor","animationDuration","total","hwi","hw","fl","split","shortdef","progressType","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccd17f11.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Form, Button, getGlobalStyles, Progress } from \"grape-ui-react\";\r\n\r\nconst theme = getGlobalStyles();\r\n\r\nexport const SearchForm = styled(Form)`\r\n\tmax-width: 600px;\r\n\tmargin: 2rem auto 1rem auto;\r\n\tposition: relative;\r\n\t\r\n\t${Progress} {\r\n\t\tposition: absolute;\r\n\t\tbottom: 17px;\r\n\t\tleft: 1px;\r\n\t\tright: 1px;\r\n\t}\r\n\t\r\n\t${Button} {\r\n\t\tposition: absolute;\r\n\t\ttop: 0.25rem;\r\n\t\tright: 0;\r\n\t\tbottom: 1rem;\r\n\t\tmargin: 0;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tfont-size: 2rem;\r\n\t\tline-height: 0;\r\n\t}\r\n\t\r\n\t&:focus-within {\r\n\t\t\r\n\t\t${Button} {\r\n\t\t\tcolor: ${theme.colors.brandPrimary.base};\r\n\t\t}\r\n\t}\r\n`;","import styled from 'styled-components';\r\nimport {getGlobalStyles} from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\n//console.log(theme);\r\n\r\nexport const ResultListContainer = styled.section`\r\n\tmax-width: 37.5rem;\r\n\tmargin: 0 auto 2rem auto;\r\n\tposition: relative;\r\n\t\r\n\t.carousel {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: nowrap;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\t\r\n\t\tdiv[role=\"listbox\"] {\r\n\t\t\torder: 2;\r\n\t\t\tflex-grow: 1;\r\n\t\t\t\r\n\t\t\t.carousel__inner-slide {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tbutton {\r\n\t\t\tborder: 0;\r\n\t\t\tappearance: none;\r\n\r\n\t\t\t&[aria-label=\"previous\"],\r\n\t\t\t&[aria-label=\"next\"] {\r\n\t\t\t\tbackground: transparent;\r\n\t\t\t\tcolor: ${theme.colors.brandDark.light};\r\n\t\t\t\tfont-size: 2rem;\r\n\t\t\t\tline-height: 1;\r\n\t\t\t\r\n\t\t\t\t&:hover, &:focus {\r\n\t\t\t\t\tcolor: ${theme.colors.brandPrimary.base};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t&[disabled] {\r\n\t\t\t\t\tcolor: ${theme.colors.brandDark.light};\r\n\t\t\t\t\topacity: 0.25;\r\n\t\t\t\t\tpointer-events: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t&[aria-label=\"previous\"] {\r\n\t\t\t\tjustify-content: flex-start;\r\n\t\t\t\torder: 1;\r\n\t\t\t\tmargin-left: -40px;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t&[aria-label=\"next\"] {\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\torder: 3;\r\n\t\t\t\tmargin-right: -40px;\r\n\t\t\t}\r\n\r\n\t\t\t&[aria-label=\"slide dot\"] {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 0.5rem;\r\n\t\t\t\theight: 0.5rem;\r\n\t\t\t\tborder-radius: 0.5rem;\r\n\t\t\t\tmargin: 2px;\r\n\t\t\t\tbackground: ${theme.colors.brandDark.light};\r\n\t\t\t\t\r\n\t\t\t\t&[disabled] {\r\n\t\t\t\t\tbackground: ${theme.colors.brandPrimary.base};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t&__dot-group {\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 0;\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n`;","import React, { PropsWithChildren } from 'react';\r\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, DotGroup } from 'pure-react-carousel';\r\nimport { ResultListContainer } from './ResultList.style';\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/all\";\r\n\r\nexport const ResultList: React.FC<PropsWithChildren<{}>> = ({ children }) => {\r\n\r\n\treturn (\r\n\t\t<ResultListContainer>\r\n\t\t\t<CarouselProvider\r\n\t\t\t\tnaturalSlideWidth={100}\r\n\t\t\t\tnaturalSlideHeight={40}\r\n\t\t\t\ttotalSlides={React.Children.count(children)}\r\n\t\t\t>\r\n\t\t\t\t<Slider>\r\n\t\t\t\t\t{React.Children.map(children, (child: any, index) => {\r\n\t\t\t\t\t\treturn <Slide index={index}>{React.cloneElement(child)}</Slide>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Slider>\r\n\t\t\t\t<ButtonBack><FaAngleLeft/></ButtonBack>\r\n\t\t\t\t<ButtonNext><FaAngleRight/></ButtonNext>\r\n\t\t\t\t<DotGroup showAsSelectedForCurrentSlideOnly />\r\n\t\t\t</CarouselProvider>\r\n\t\t</ResultListContainer>\r\n\t)\r\n};\r\n\r\nexport default ResultList;","import styled from 'styled-components';\r\nimport { ListItem } from 'grape-ui-react';\r\n\r\nexport const InlineListContainer = styled.ul`\r\n\tpadding: 0;\r\n\tmargin: 0.25rem 0 0.5rem 0;\r\n\tdisplay: flex;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\t\r\n\t${ListItem} {\r\n\t\tlist-style: none;\r\n\t\tmargin-right: 1rem;\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\t\r\n\t\tsvg {\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tmargin-right: 0.25rem;\r\n\t\t}\r\n\t}\r\n`\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { InlineListContainer } from './InlineList.style';\r\n\r\nexport const InlineList: React.FC<PropsWithChildren<{}>> = ({ children }) => {\r\n\treturn (\r\n\t\t<InlineListContainer>\r\n\t\t\t{children}\r\n\t\t</InlineListContainer>\r\n\t)\r\n};\r\n\r\nexport default InlineList;","import styled from 'styled-components';\r\nimport { Card, getGlobalStyles, Header, List } from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n//console.log(theme);\r\n\r\nexport const DefinitionCard = styled.article`\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const DefinitionCardContent = styled(Card)`\r\n\r\n\t${Header} {\r\n\t\tfont-size: ${theme.fontSize.h4};\r\n\t\tline-height: 1;\r\n\t\tmargin-bottom: 0.5rem;\r\n\t}\r\n\t\r\n\t${List.ol} {\r\n\t\tpadding-left: 1rem;\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n`;","import React from 'react';\r\nimport { Header, List, ListItem } from 'grape-ui-react';\r\nimport InlineList from '../ui/InlineList/InlineList';\r\nimport { DefinitionCard, DefinitionCardContent } from './Definition.style';\r\nimport { GrHistory } from \"react-icons/gr\";\r\n\r\nexport interface DefinitionProps {\r\n\tword: string,\r\n\ttype: string,\r\n\tdate?: string,\r\n\tdefinitions: string[]\r\n}\r\n\r\nexport const Definition: React.FC<DefinitionProps> = function(props: {\r\n\tword: string,\r\n\ttype: string,\r\n\tdate?: string,\r\n\tdefinitions: string[]\r\n}) {\r\n\r\n\tconst DateOutput = () => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<GrHistory/>\r\n\t\t\t\t{props.date}\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DefinitionCard>\r\n\t\t\t<DefinitionCardContent>\r\n\t\t\t\t<Header sm>{props.word}</Header>\r\n\t\t\t\t<InlineList>\r\n\t\t\t\t\t<ListItem sm>{props.type}</ListItem>\r\n\t\t\t\t\t{props.date ?  <ListItem sm><DateOutput/></ListItem>  : null}\r\n\t\t\t\t</InlineList>\r\n\t\t\t\t<List.ol>\r\n\t\t\t\t\t{props.definitions.map((definition, index) => (\r\n\t\t\t\t\t\t<ListItem key={index} sm>{definition}</ListItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List.ol>\r\n\t\t\t</DefinitionCardContent>\r\n\t\t</DefinitionCard>\r\n\t)\r\n}\r\n\r\nexport default Definition;","import styled from 'styled-components';\r\nimport { Card, getGlobalStyles, Paragraph } from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\nexport const MessageCard = styled(Card)`\r\n\tmax-width: 600px;\r\n\tmargin: 0 auto;\r\n\tborder-color: ${(props: { color:string }) => theme.colors[props.color].base};\r\n\tcolor: ${(props: { color:string }) => theme.colors[props.color].base};\r\n\t\r\n\t${Paragraph} {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n`;","import React from 'react';\r\nimport { Paragraph } from 'grape-ui-react';\r\nimport { MessageCard } from './Message.style';\r\n\r\nexport interface MessageProps {\r\n\tcolor: string,\r\n\ttext: string\r\n}\r\n\r\nexport const Message: React.FC<MessageProps> = function(props: {\r\n\tcolor: string,\r\n\ttext: string\r\n}) {\r\n\r\n\treturn (\r\n\t\t<MessageCard color={props.color}>\r\n\t\t\t<Paragraph>{props.text}</Paragraph>\r\n\t\t</MessageCard>\r\n\t)\r\n\r\n}\r\n\r\nexport default Message;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { styledHelpers, TextField, Button, Progress } from 'grape-ui-react';\r\nimport { SearchForm } from './Search.style';\r\nimport { CgSearch } from 'react-icons/cg';\r\nimport ResultList from '../ResultList/ResultList';\r\nimport Definition from '../Definition/Definition';\r\nimport Message from '../Message/Message';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\n\r\nconst theme = {\r\n\tbuttons: {\r\n\t\t...styledHelpers.buttonThemes(),\r\n\t},\r\n};\r\n\r\nexport const Search: React.FC = function() {\r\n\tconst [liveSearchTerm, setLiveSearchTerm] = useState<string>('');\r\n\tconst [submittedSearchTerm, setSubmittedSearchTerm] = useState<string>('');\r\n\tconst apiKeyDict = '16a63a57-7277-4843-8034-4285a3b986ee';\r\n\t//const apiKeyThes = '0803c54f-d908-4630-86a1-0e31e656d692';\r\n\tconst [definitions, setDefinitions] = useState<any[]>([]);\r\n\tconst [queryRunning, setQueryRunning] = useState<boolean>(false);\r\n\r\n\t/**\r\n\t * Every time the input value changes, the liveSearchTerm variable is updated\r\n\t * @param event\r\n\t */\r\n\tfunction updateSearchTerm(event: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tsetLiveSearchTerm(event.target.value);\r\n\t}\r\n\r\n\t/**\r\n\t * When the search form is submitted, recognise the input is now \"the term to actually search for\"\r\n\t * by putting it into a different state variable.\r\n\t * Reason for separating them like this to show appropriate messages,\r\n\t * if they're the same variable then users see \"nothing found\" when they've started typing without submitting\r\n\t * @param event\r\n\t */\r\n\tfunction handleSearchSubmit(event: { preventDefault: () => void; }) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tsetSubmittedSearchTerm(liveSearchTerm);\r\n\t\t// can't run the actual search within this function because it will get the previous value of submittedSearchTerm,\r\n\t\t// not the one we just set here, so see below useEffect hook for the actual search query\r\n\t}\r\n\r\n\t/**\r\n\t * When the submitted search term changes, do the API query\r\n\t * and save the definitions to the relevant state variable\r\n\t */\r\n\tuseEffect(() => {\r\n\r\n\t\t// setQueryRunning to true to show the loading state\r\n\t\tsetQueryRunning(true);\r\n\r\n\t\t// Run the query using getDefinitions function\r\n\t\tgetDefinitions(submittedSearchTerm).then(definitions => {\r\n\r\n\t\t\t// When getDefinitions returns something, wait half a second before proceeding\r\n\t\t\t// to ensure loading state always shows\r\n\t\t\tdelay(500).then(function() {\r\n\r\n\t\t\t\t// Save the definitions to the state variable\r\n\t\t\t\tsetDefinitions(definitions.slice(0, 3));\r\n\r\n\t\t\t\t// setQueryRunning to false so the loading state disappears\r\n\t\t\t\tsetQueryRunning(false);\r\n\t\t\t})\r\n\t\t})\r\n\t}, [submittedSearchTerm]);\r\n\r\n\r\n\t/**\r\n\t * The function to get definitions from the API\r\n\t * @param term\r\n\t */\r\n\tasync function getDefinitions(term: string) {\r\n\t\tconst query = `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${term}?key=${apiKeyDict}`;\r\n\r\n\t\treturn axios.get(query)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Utility function to add a delay before doing something\r\n\t * @param milliseconds\r\n\t */\r\n\tasync function delay(milliseconds: number) {\r\n\t\treturn new Promise(response => setTimeout(response, milliseconds));\r\n\t}\r\n\r\n\t/**\r\n\t * Component output\r\n\t */\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<SearchForm onSubmit={handleSearchSubmit}>\r\n\t\t\t\t<TextField labelText=\"Search for:\" placeholder=\"Enter search term\" autoFocus={true} onChange={updateSearchTerm} />\r\n\t\t\t\t<Button variant=\"dark\" onClick={handleSearchSubmit}><CgSearch/></Button>\r\n\t\t\t\t{ submittedSearchTerm && queryRunning ?\r\n\t\t\t\t\t<Progress indicatorColor=\"brandPrimary\" trackColor=\"FormControlFilledBg\" animationDuration=\"2s\" />\r\n\t\t\t\t\t: <Progress total={10} value={0} trackColor=\"brandLight\" />\r\n\t\t\t\t}\r\n\t\t\t</SearchForm>\r\n\t\t\t{ /* If a search term has been submitted and returned definition objects, show definition cards  */ }\r\n\t\t\t{submittedSearchTerm && !queryRunning && definitions && (typeof definitions[0] == 'object') ?\r\n\t\t\t\t<ResultList>\r\n\t\t\t\t\t{definitions.map((definition, index) => (\r\n\t\t\t\t\t\t<Definition key={index}\r\n\t\t\t\t\t\t\t\t\tword={definition.hwi.hw}\r\n\t\t\t\t\t\t\t\t\ttype={definition.fl}\r\n\t\t\t\t\t\t\t\t\tdate={definition.date ? (definition.date).split('{')[0] : null}\r\n\t\t\t\t\t\t\t\t\tdefinitions={definition.shortdef}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ResultList>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t{ /* If a search term has been submitted and the query is still running, show progress indicator */ }\r\n\t\t\t{ submittedSearchTerm && queryRunning ?\r\n\t\t\t\t<Progress\r\n\t\t\t\t\tindicatorColor=\"brandPrimary\"\r\n\t\t\t\t\tprogressType=\"circular\"\r\n\t\t\t\t\ttrackColor=\"formControlFilledBg\"\r\n\t\t\t\t/>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t{ /* If a search term has been submitted and query run but there were no valid definitions, show an error */ }\r\n\t\t\t{ submittedSearchTerm && !queryRunning && (!definitions || typeof definitions[0] !== 'object') ?\r\n\t\t\t\t<Message color=\"brandDanger\" text=\"Nothing found\"/>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t{ /* If there is no submitted search term, show a prompt */ }\r\n\t\t\t{ !submittedSearchTerm ?\r\n\t\t\t\t<Message color=\"brandSuccess\" text=\"Please enter a search term\"/>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport Search from './components/Search/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\t\t<Search/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}