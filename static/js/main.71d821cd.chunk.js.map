{"version":3,"sources":["components/Search/Search.style.tsx","components/ResultList/ResultList.style.tsx","components/ResultList/ResultList.tsx","components/ui/InlineList/InlineList.style.tsx","components/ui/InlineList/InlineList.tsx","components/Definition/Definition.style.tsx","components/Definition/Definition.tsx","components/Message/Message.style.tsx","components/Message/Message.tsx","components/Gallery/Gallery.style.tsx","components/Gallery/Gallery.tsx","components/Banner/Banner.style.tsx","components/Banner/Banner.tsx","components/Search/Search.tsx","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","getGlobalStyles","styled","Form","Progress","Button","theme","ResultListContainer","section","colors","brandDark","light","brandPrimary","base","ResultList","children","naturalSlideWidth","naturalSlideHeight","isIntrinsicHeight","totalSlides","React","Children","count","map","child","index","cloneElement","showAsSelectedForCurrentSlideOnly","InlineListContainer","ul","ListItem","brandSecondary","InlineList","DefinitionCard","article","DefinitionCardContent","Card","Header","fontSize","h4","List","ol","Paragraph","Definition","props","searchSynonym","event","onSynonymClick","target","innerHTML","sm","word","type","definitions","definition","synonyms","slice","synonym","onClick","MessageCard","color","Message","text","ImageGrid","ImageItem","div","Gallery","Object","entries","images","key","imageData","src","urls","thumb","alt","alt_description","BannerBox","Banner","imageURL","hasResults","style","backgroundImage","buttons","styledHelpers","buttonThemes","Search","useState","liveSearchTerm","setLiveSearchTerm","submittedSearchTerm","setSubmittedSearchTerm","apiKeyThes","apiKeyImages","setDefinitions","setHasResults","bannerImage","setBannerImage","setImages","queryRunning","setQueryRunning","loadSearchTerm","term","handleSearchSubmit","preventDefault","a","query","axios","get","then","response","data","catch","error","console","log","useEffect","getDefinitions","getImages","results","full","finally","onSubmit","labelText","placeholder","autoFocus","onChange","value","variant","className","indicatorColor","trackColor","animationDuration","total","hwi","hw","fl","shortdef","meta","syns","progressType","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71d821cd.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Form, Button, getGlobalStyles, Progress } from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\nexport const SearchForm = styled(Form)`\r\n\twidth: 100%;\r\n\tmax-width: 600px;\r\n\tmargin: 0 auto;\r\n\tposition: relative;\r\n\t\r\n\t* {\r\n\t\tbackground: transparent;\r\n\t}\r\n\t\r\n\t.progressWrapper { // hack because ${Progress} doesn't work here\r\n\t\tposition: absolute;\r\n\t\tbottom: 17px;\r\n\t\tleft: 1px;\r\n\t\tright: 1px;\t\r\n\t}\r\n\t\r\n\t{$TextField} {\r\n\t\tcolor: white;\r\n\t\t\r\n\t\tlabel {\r\n\t\t\ttop: -0.6rem;\r\n\t\t}\r\n\t\t\r\n\t\tinput {\r\n\t\t\tborder-color: white;\r\n\t\t\tbackground: rgba(0,0,0,0.5);\r\n\t\t\tbox-shadow: 0 0 1rem black;\r\n\t\t}\r\n\t}\r\n\t\r\n\t${Button} {\r\n\t\tposition: absolute;\r\n\t\ttop: 0.25rem;\r\n\t\tright: 0;\r\n\t\tbottom: 1rem;\r\n\t\tmargin: 0;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tcolor: white;\r\n\t\tfont-size: 2rem;\r\n\t\tline-height: 0;\r\n\t}\r\n\t\r\n\t&:focus-within {\r\n\t\r\n\t\tlabel {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t\r\n\t\tinput {\r\n\t\t\tbox-shadow: 0 0 1rem white;\r\n\t\t\tborder-color: white;\r\n\t\t}\r\n\t}\r\n`;","import styled from 'styled-components';\r\nimport {getGlobalStyles} from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\nexport const ResultListContainer = styled.section`\r\n\tmax-width: 37.5rem;\r\n\tmargin: -5rem auto 2rem;\r\n\tposition: relative;\r\n\t\r\n\t.carousel {\r\n\t\tbackground: white;\r\n\t\tborder-radius: 0.25rem;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: nowrap;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\tpadding-bottom: 12px;\r\n\t\t\r\n\t\tdiv[role=\"listbox\"] {\r\n\t\t\torder: 2;\r\n\t\t\tflex-grow: 1;\r\n\t\t\t\r\n\t\t\t.carousel__inner-slide {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmin-height: 225px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tbutton {\r\n\t\t\tborder: 0;\r\n\t\t\tappearance: none;\r\n\r\n\t\t\t&[aria-label=\"previous\"],\r\n\t\t\t&[aria-label=\"next\"] {\r\n\t\t\t\tbackground: transparent;\r\n\t\t\t\tcolor: ${theme.colors.brandDark.light};\r\n\t\t\t\tfont-size: 2rem;\r\n\t\t\t\tline-height: 1;\r\n\t\t\t\r\n\t\t\t\t&:hover, &:focus {\r\n\t\t\t\t\tcolor: ${theme.colors.brandPrimary.base};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t&[disabled] {\r\n\t\t\t\t\tcolor: ${theme.colors.brandDark.light};\r\n\t\t\t\t\topacity: 0.25;\r\n\t\t\t\t\tpointer-events: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t&[aria-label=\"previous\"] {\r\n\t\t\t\tjustify-content: flex-start;\r\n\t\t\t\torder: 1;\r\n\t\t\t\tmargin-left: -40px;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t&[aria-label=\"next\"] {\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\torder: 3;\r\n\t\t\t\tmargin-right: -40px;\r\n\t\t\t}\r\n\r\n\t\t\t&[aria-label=\"slide dot\"] {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 0.5rem;\r\n\t\t\t\theight: 0.75rem;\r\n\t\t\t\tborder-radius: 0.5rem;\r\n\t\t\t\tmargin: 2px;\r\n\t\t\t\tbackground: ${theme.colors.brandDark.light};\r\n\t\t\t\t\r\n\t\t\t\t&[disabled] {\r\n\t\t\t\t\tbackground: ${theme.colors.brandPrimary.base};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t&__dot-group {\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 0;\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t}\r\n`;","import React, { PropsWithChildren } from 'react';\r\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, DotGroup } from 'pure-react-carousel';\r\nimport { ResultListContainer } from './ResultList.style';\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/all\";\r\n\r\nexport const ResultList: React.FC<PropsWithChildren<{}>> = ({ children }) => {\r\n\r\n\treturn (\r\n\t\t<ResultListContainer>\r\n\t\t\t<CarouselProvider\r\n\t\t\t\tnaturalSlideWidth={100}\r\n\t\t\t\tnaturalSlideHeight={40}\r\n\t\t\t\tisIntrinsicHeight={true}\r\n\t\t\t\ttotalSlides={React.Children.count(children)}\r\n\t\t\t>\r\n\t\t\t\t<Slider>\r\n\t\t\t\t\t{React.Children.map(children, (child: any, index) => {\r\n\t\t\t\t\t\treturn <Slide index={index}>{React.cloneElement(child)}</Slide>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Slider>\r\n\t\t\t\t<ButtonBack><FaAngleLeft/></ButtonBack>\r\n\t\t\t\t<ButtonNext><FaAngleRight/></ButtonNext>\r\n\t\t\t\t<DotGroup showAsSelectedForCurrentSlideOnly />\r\n\t\t\t</CarouselProvider>\r\n\t\t</ResultListContainer>\r\n\t)\r\n};\r\n\r\nexport default ResultList;","import styled from 'styled-components';\r\nimport { ListItem, Button, getGlobalStyles } from 'grape-ui-react';\r\nconst theme = getGlobalStyles();\r\n\r\nexport const InlineListContainer = styled.ul`\r\n\tpadding: 0;\r\n\tmargin: 0.25rem 0 0.5rem 0;\r\n\tdisplay: flex;\r\n\tjustify-content: flex-start;\r\n\tflex-wrap: wrap;\r\n\talign-items: center;\r\n\t\r\n\t${ListItem} {\r\n\t\tlist-style: none;\r\n\t\tmargin-right: 0.5rem;\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\t\r\n\t\t${Button} {\r\n\t\t\tborder: 1px solid ${theme.colors.brandSecondary.base};\r\n\t\t\tcolor: ${theme.colors.brandSecondary.base};\r\n\t\t\topacity: 0.5;\r\n\t\t\tborder-radius: 1rem;\r\n\t\t\tmargin: 0;\r\n\t\t\ttransition: all 0.2s ease;\r\n\t\t\ttext-transform: lowercase;\r\n\t\t\tfont-size: 0.75rem;\r\n\t\t\tline-height: 1.4;\r\n\t\t\t\r\n\t\t\t&:hover, &:focus {\r\n\t\t\t\tbackground: ${theme.colors.brandSecondary.base};\r\n\t\t\t\tcolor: white;\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { InlineListContainer } from './InlineList.style';\r\n\r\nexport const InlineList: React.FC<PropsWithChildren<{}>> = ({ children }) => {\r\n\treturn (\r\n\t\t<InlineListContainer>\r\n\t\t\t{children}\r\n\t\t</InlineListContainer>\r\n\t)\r\n};\r\n\r\nexport default InlineList;","import styled from 'styled-components';\r\nimport { Card, getGlobalStyles, Header, List, ListItem, Paragraph } from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\nexport const DefinitionCard = styled.article`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t\r\n\t> div {\r\n\t\tborder: 0;\r\n\t}\r\n`;\r\n\r\nexport const DefinitionCardContent = styled(Card)`\r\n\r\n\t${Header} {\r\n\t\tfont-size: ${theme.fontSize.h4};\r\n\t\tcolor: ${theme.colors.brandPrimary.base};\r\n\t\tfont-weight: bold;\r\n\t\tline-height: 1;\r\n\t\tmargin-bottom: 0.5rem;\r\n\t}\r\n\t\r\n\t${List.ol} {\r\n\t\tpadding-left: 1rem;\r\n\t\tmargin-bottom: 0;\r\n\t\t\r\n\t\t${ListItem} {\r\n\t\t\tmargin-bottom: 0.5rem;\r\n\t\t}\r\n\t}\r\n\t\r\n\t${Paragraph} {\r\n\t\tmargin-bottom: 0.5rem;\r\n\t}\r\n`;","import React from 'react';\r\nimport { Header, List, ListItem, Paragraph, Button } from 'grape-ui-react';\r\nimport InlineList from '../ui/InlineList/InlineList';\r\nimport { DefinitionCard, DefinitionCardContent } from './Definition.style';\r\n\r\nexport interface DefinitionProps {\r\n\tword: string,\r\n\ttype: string,\r\n\tdefinitions: string[],\r\n\tsynonyms: [][],\r\n\tonSynonymClick: (synonym: string) => void;\r\n}\r\n\r\nexport const Definition: React.FC<DefinitionProps> = function(props: {\r\n\tword: string,\r\n\ttype: string,\r\n\tdefinitions: string[],\r\n\tsynonyms: [][],\r\n\tonSynonymClick: (synonym: string) => void;\r\n}) {\r\n\r\n\tfunction searchSynonym(event: { target: { innerHTML: string; }; }) {\r\n\t\tprops.onSynonymClick(event.target.innerHTML);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DefinitionCard>\r\n\t\t\t<DefinitionCardContent>\r\n\t\t\t\t<Header sm>{props.word}</Header>\r\n\t\t\t\t<InlineList>\r\n\t\t\t\t\t<ListItem sm>{props.type}</ListItem>\r\n\t\t\t\t</InlineList>\r\n\t\t\t\t<List.ol>\r\n\t\t\t\t\t{props.definitions.map((definition, index) => (\r\n\t\t\t\t\t\t<ListItem key={index} sm>\r\n\t\t\t\t\t\t\t<Paragraph sm>{definition}</Paragraph>\r\n\t\t\t\t\t\t\t{props.synonyms[index] ?\r\n\t\t\t\t\t\t\t\t<InlineList>\r\n\t\t\t\t\t\t\t\t\t{(props.synonyms[index].slice(0,5)).map((synonym, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button sm onClick={searchSynonym}>{synonym}</Button>\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</InlineList>\r\n\t\t\t\t\t\t\t: null }\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List.ol>\r\n\t\t\t</DefinitionCardContent>\r\n\t\t</DefinitionCard>\r\n\t)\r\n}\r\n\r\nexport default Definition;","import styled from 'styled-components';\r\nimport { Card, getGlobalStyles, Paragraph } from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\nexport const MessageCard = styled(Card)`\r\n\tmax-width: 600px;\r\n\tmargin: 0 auto;\r\n\tborder-color: ${(props: { color:string }) => theme.colors[props.color].base};\r\n\tcolor: ${(props: { color:string }) => theme.colors[props.color].base};\r\n\t\r\n\t${Paragraph} {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n`;","import React from 'react';\r\nimport { Paragraph } from 'grape-ui-react';\r\nimport { MessageCard } from './Message.style';\r\n\r\nexport interface MessageProps {\r\n\tcolor: string,\r\n\ttext: string\r\n}\r\n\r\nexport const Message: React.FC<MessageProps> = function(props: {\r\n\tcolor: string,\r\n\ttext: string\r\n}) {\r\n\r\n\treturn (\r\n\t\t<MessageCard color={props.color}>\r\n\t\t\t<Paragraph>{props.text}</Paragraph>\r\n\t\t</MessageCard>\r\n\t)\r\n\r\n}\r\n\r\nexport default Message;","import styled from 'styled-components';\r\n\r\nexport const ImageGrid = styled.section`\r\n\tdisplay: flex;\r\n\tflex-wrap: nowrap;\r\n\tmargin-top: 1rem;\r\n`;\r\n\r\nexport const ImageItem = styled.div`\r\n\twidth: 20%;\r\n\tflex-basis: 20%;\r\n\theight: 10rem;\r\n\toverflow: hidden;\r\n\t\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tobject-fit: cover;\r\n\t\tobject-position: center center;\r\n\t}\r\n`;","import React from 'react';\r\nimport { ImageGrid, ImageItem } from \"../Gallery/Gallery.style\";\r\n\r\nexport interface GalleryProps {\r\n\timages: object\r\n}\r\n\r\nexport const Gallery: React.FC<GalleryProps> = function(props: {\r\n\timages: object\r\n}) {\r\n\r\n\treturn (\r\n\t\t<ImageGrid>\r\n\t\t\t{Object.entries(props.images).map(([key, imageData]) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ImageItem key={key}>\r\n\t\t\t\t\t\t<img src={imageData.urls.thumb} alt={imageData.alt_description} />\r\n\t\t\t\t\t</ImageItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</ImageGrid>\r\n\t)\r\n}\r\n\r\nexport default Gallery;","import styled from 'styled-components';\r\nimport {getGlobalStyles} from \"grape-ui-react\";\r\nconst theme = getGlobalStyles();\r\n\r\nexport const BannerBox = styled.section`\r\n\tbackground-color: #222;\r\n\theight: 50vh;\r\n\tpadding: 1rem;\r\n\tmargin-bottom: 1rem;\r\n\tbackground-size: cover;\r\n\tbackground-position: center center;\r\n\tdisplay: flex;\r\n\talign-items: flex-end;\r\n\tposition: relative;\r\n\t\r\n\t&[data-results=true] {\r\n\t\tpadding: 1rem 1rem 4rem;\r\n\t}\r\n\t\r\n\t&:before {\r\n\t\tcontent: '';\r\n\t\tbackground: linear-gradient(to top, rgba(0,0,0,0.8), rgba(0,0,0,0));\r\n\t\tposition: absolute;\r\n\t\ttop: 40%;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t}\r\n`;","import React, {PropsWithChildren} from 'react';\r\nimport {BannerBox} from \"./Banner.style\";\r\n\r\nexport interface BannerProps {\r\n\timageURL: string\r\n\thasResults: boolean\r\n}\r\n\r\nexport const Banner: React.FC<PropsWithChildren<BannerProps>> = ({\r\n\tchildren,\r\n\timageURL,\r\n\thasResults\r\n}) => (\r\n\r\n\t<BannerBox style={{backgroundImage: `url(${imageURL ? imageURL : \"\"})`}} data-results={hasResults}>\r\n\t\t{children}\r\n\t</BannerBox>\r\n)\r\n\r\nexport default Banner;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { styledHelpers, TextField, Button, Progress } from 'grape-ui-react';\r\nimport { SearchForm } from './Search.style';\r\nimport { CgSearch } from 'react-icons/cg';\r\nimport ResultList from '../ResultList/ResultList';\r\nimport Definition from '../Definition/Definition';\r\nimport Message from '../Message/Message';\r\nimport Gallery from '../Gallery/Gallery';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport Banner from \"../Banner/Banner\";\r\n\r\nconst theme = {\r\n\tbuttons: {\r\n\t\t...styledHelpers.buttonThemes(),\r\n\t},\r\n};\r\n\r\nexport const Search: React.FC = function() {\r\n\tconst [liveSearchTerm, setLiveSearchTerm] = useState<string>('');\r\n\tconst [submittedSearchTerm, setSubmittedSearchTerm] = useState<string>('');\r\n\tconst apiKeyDict = '16a63a57-7277-4843-8034-4285a3b986ee';\r\n\tconst apiKeyThes = '0803c54f-d908-4630-86a1-0e31e656d692';\r\n\tconst apiKeyImages = 'wXyDQXrTFTAwuxLgBTDEZnzB4-euefC31caZoskUe9A';\r\n\tconst [definitions, setDefinitions] = useState<any[]>([]);\r\n\tconst [hasResults, setHasResults] = useState<boolean>(false);\r\n\tconst [bannerImage, setBannerImage] = useState<string>(\"https://images.unsplash.com/photo-1524995997946-a1c2e315a42f?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNTk0NTl8MHwxfHNlYXJjaHw2fHxib29rc3xlbnwwfHx8fDE2MzE2NzkzMDY&ixlib=rb-1.2.1&q=80&w=1920\");\r\n\tconst [images, setImages] = useState<any[]>([]);\r\n\tconst [queryRunning, setQueryRunning] = useState<boolean>(false);\r\n\r\n\t/**\r\n\t * Every time the input value changes, the liveSearchTerm variable is updated\r\n\t * @param event\r\n\t */\r\n\tfunction updateSearchTerm(event: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tsetLiveSearchTerm(event.target.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Handle search term being changed externally\r\n\t * (e.g. passed up from a definition via onSynonymClick prop)\r\n\t * @param term\r\n\t */\r\n\tfunction loadSearchTerm(term: string) {\r\n\t\tsetLiveSearchTerm(term);\r\n\t\tsetSubmittedSearchTerm(term);\r\n\t}\r\n\r\n\t/**\r\n\t * When the search form is submitted, recognise the input is now \"the term to actually search for\"\r\n\t * by putting it into a different state variable.\r\n\t * Reason for separating them like this to show appropriate messages,\r\n\t * if they're the same variable then users see \"nothing found\" when they've started typing without submitting\r\n\t * @param event\r\n\t */\r\n\tfunction handleSearchSubmit(event: { preventDefault: () => void; }) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tsetSubmittedSearchTerm(liveSearchTerm);\r\n\t\t// can't run the actual search within this function because it will get the previous value of submittedSearchTerm,\r\n\t\t// not the one we just set here, so see below useEffect hook for the actual search query\r\n\t}\r\n\r\n\t/**\r\n\t * When the submitted search term changes, do the API queries\r\n\t * and save the definitions and synonyms to the relevant state variables\r\n\t */\r\n\tuseEffect(() => {\r\n\r\n\t\t// setQueryRunning to true to show the loading state\r\n\t\tsetQueryRunning(true);\r\n\r\n\t\t// Run definitions query followed by images query\r\n\t\t// and save the results to the relevant state variables\r\n\t\tgetDefinitions(submittedSearchTerm).then(definitions => {\r\n\t\t\tsetDefinitions(definitions.slice(0, 3));\r\n\r\n\t\t\tgetImages(submittedSearchTerm).then(images => {\r\n\t\t\t\tsetImages(images.results.slice(1,6));\r\n\r\n\t\t\t\tif(images.results[0]) {\r\n\t\t\t\t\tsetBannerImage(images.results[0].urls.full);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tsetQueryRunning(false);\r\n\t\t})\r\n\r\n\t}, [submittedSearchTerm]);\r\n\r\n\t/**\r\n\t * Set the hasResults boolean according to whether the current definitions are objects or not\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif(!definitions || typeof definitions[0] !== 'object') {\r\n\t\t\tsetHasResults(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetHasResults(true);\r\n\t\t}\r\n\t}, [definitions]);\r\n\r\n\r\n\t/**\r\n\t * The function to get word data from the Merriam-Webster API\r\n\t * (The thesaurus API gets basic definition data as well as the synonyms, so just using the one query)\r\n\t * @param term\r\n\t */\r\n\tasync function getDefinitions(term: string) {\r\n\t\tconst query = `https://www.dictionaryapi.com/api/v3/references/thesaurus/json/${term}?key=${apiKeyThes}`;\r\n\r\n\t\treturn axios.get(query)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * The function to get images from the Unsplash API\r\n\t * @param term\r\n\t */\r\n\tasync function getImages(term: string) {\r\n\t\tconst query = `https://api.unsplash.com/search/photos?page=1&query=${term}&client_id=${apiKeyImages}`;\r\n\r\n\t\treturn axios.get(query)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Component output\r\n\t */\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\r\n\t\t\t<Banner imageURL={bannerImage ? bannerImage : \"\"} hasResults={hasResults}>\r\n\t\t\t\t<SearchForm onSubmit={handleSearchSubmit}>\r\n\t\t\t\t\t<TextField labelText=\"Search for:\" placeholder=\"Enter search term\" autoFocus={true} onChange={updateSearchTerm} value={liveSearchTerm} />\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={handleSearchSubmit}><CgSearch/></Button>\r\n\t\t\t\t\t<div className=\"progressWrapper\">\r\n\t\t\t\t\t\t{ submittedSearchTerm && queryRunning ?\r\n\t\t\t\t\t\t\t<Progress indicatorColor=\"brandPrimary\" trackColor=\"FormControlFilledBg\" animationDuration=\"2s\" />\r\n\t\t\t\t\t\t\t: <Progress total={10} value={0} trackColor=\"brandLight\" />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</SearchForm>\r\n\t\t\t</Banner>\r\n\r\n\t\t\t{ /* If a search term has been submitted and returned definition objects, show definition cards  */ }\r\n\t\t\t{submittedSearchTerm && !queryRunning && definitions && (typeof definitions[0] == 'object') ?\r\n\t\t\t\t<ResultList>\r\n\t\t\t\t\t{definitions.map((definition, index) => (\r\n\t\t\t\t\t\t<Definition key={index}\r\n\t\t\t\t\t\t\t\t\tword={definition.hwi.hw}\r\n\t\t\t\t\t\t\t\t\ttype={definition.fl}\r\n\t\t\t\t\t\t\t\t\tdefinitions={definition.shortdef}\r\n\t\t\t\t\t\t\t\t\tsynonyms={(definition.meta.syns).slice(0,5)}\r\n\t\t\t\t\t\t\t\t\tonSynonymClick={loadSearchTerm}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ResultList>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t{ /* If a search term has been submitted and the query is still running, show progress indicator */ }\r\n\t\t\t{ submittedSearchTerm && queryRunning ?\r\n\t\t\t\t<Progress\r\n\t\t\t\t\tindicatorColor=\"brandPrimary\"\r\n\t\t\t\t\tprogressType=\"circular\"\r\n\t\t\t\t\ttrackColor=\"formControlFilledBg\"\r\n\t\t\t\t/>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t{ /* If a search term has been submitted and query run but there were no valid definitions, show an error */ }\r\n\t\t\t{ submittedSearchTerm && !queryRunning && (!definitions || typeof definitions[0] !== 'object') ?\r\n\t\t\t\t<Message color=\"brandDanger\" text=\"Not found in dictionary\"/>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t{ /* If there is no submitted search term, show a prompt */ }\r\n\t\t\t{ !submittedSearchTerm ?\r\n\t\t\t\t<Message color=\"brandSuccess\" text=\"Please enter a search term\"/>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\r\n\t\t\t{ /* If a search term has been submitted and returned images, show them */ }\r\n\t\t\t{submittedSearchTerm && !queryRunning && images ? <Gallery images={images}/> : null }\r\n\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport Search from './components/Search/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\t\t<Search/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}